// Generated by CoffeeScript 1.6.2
(function() {
  var fs, path, replaceTargetInData, replaceTargetsInFiles, types;

  fs = require('fs');

  path = require('path');

  types = {};

  replaceTargetsInFiles = function(files, version, pkgs) {
    var data, file, pkg, _i, _j, _len, _len1, _results;

    _results = [];
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      file = files[_i];
      console.log("updating file " + file + " with version " + version);
      data = fs.readFileSync(file, 'utf8');
      for (_j = 0, _len1 = pkgs.length; _j < _len1; _j++) {
        pkg = pkgs[_j];
        data = replaceTargetInData(data, version, pkg);
      }
      _results.push(fs.writeFileSync(file, data));
    }
    return _results;
  };

  replaceTargetInData = function(data, version, pkg) {
    var ext, match, name, replace;

    ext = path.extname(pkg.target);
    name = path.basename(pkg.target, ext);
    match = new RegExp("=(\"|')" + name + "[^\"']?" + ext + "(\"|')");
    replace = "=$1" + name + "." + version + ext + "$2";
    return data.replace(match, replace);
  };

  types["package"] = {
    getVersion: function() {
      return JSON.parse(fs.readFileSync('package.json', 'utf8')).version;
    },
    updateFiles: function(files, pkgs) {
      return replaceTargetsInFiles(files, this.getVersion(), pkgs);
    }
  };

  types.trimVersionFromUrl = function(url) {
    return url.replace(/^([^.]+).*(\.css|\.js)$/i, "$1$2");
  };

  module.exports = types;

}).call(this);
