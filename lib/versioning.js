// Generated by CoffeeScript 1.6.2
(function() {
  var fs, path, replaceTargetInData, replaceTargetsInAppFiles, types, utils;

  fs = require('fs');

  path = require('path');

  utils = require('./utils');

  types = {};

  replaceTargetsInAppFiles = function(app, value) {
    var data, file, files, pkg, _i, _j, _len, _len1, _ref, _results;

    files = utils.toArray(app.versioning.files);
    console.log(files);
    _results = [];
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      file = files[_i];
      utils.log("- updating file <yellow>" + file + "</yellow> with version: <b>" + value + "</b>");
      data = fs.readFileSync(file, 'utf8');
      _ref = app.packages;
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        pkg = _ref[_j];
        data = replaceTargetInData(data, value, pkg);
      }
      _results.push(fs.writeFileSync(file, data));
    }
    return _results;
  };

  replaceTargetInData = function(data, value, pkg) {
    var ext, match, name, replace;

    ext = path.extname(pkg.target);
    name = path.basename(pkg.target, ext);
    match = new RegExp("=(\"|')" + name + "[^\"']?" + ext + "(\"|')");
    replace = "=$1" + name + "." + value + ext + "$2";
    return data.replace(match, replace);
  };

  types["package"] = {
    getVersion: function() {
      return JSON.parse(fs.readFileSync('./package.json', 'utf8')).version;
    },
    updateVersion: function(app) {
      return replaceTargetsInAppFiles(app, this.getVersion());
    },
    trimVersion: function(url) {
      return url.replace(/^([^.]+).*(\.css|\.js)$/i, "$1$2");
    }
  };

  module.exports = types;

}).call(this);
