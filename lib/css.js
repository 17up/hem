// Generated by CoffeeScript 1.3.3
(function() {
  var CSS, compilers, fs, resolve,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  resolve = require('path').resolve;

  fs = require('fs');

  compilers = require('./compilers');

  CSS = (function() {

    function CSS(config) {
      if (config == null) {
        config = {};
      }
      this.middleware = __bind(this.middleware, this);

      try {
        this.path = require.resolve(resolve(config.path));
        this.target = config.target;
      } catch (e) {

      }
    }

    CSS.prototype.compile = function() {
      if (!this.path) {
        return;
      }
      delete require.cache[this.path];
      return require(this.path);
    };

    CSS.prototype.unlink = function() {
      if (fs.existsSync(this.target)) {
        return fs.unlinkSync(this.target);
      }
    };

    CSS.prototype.middleware = function(req, res, next) {
      var contentType, str;
      str = this.compile();
      contentType = "text/css";
      res.charset = 'utf-8';
      res.setHeader('Content-Type', contentType);
      res.setHeader('Content-Length', Buffer.byteLength(str));
      return res.end((req.method === 'HEAD' && null) || str);
    };

    return CSS;

  })();

  module.exports = {
    CSS: CSS,
    createPackage: function(config) {
      return new CSS(config);
    }
  };

}).call(this);
