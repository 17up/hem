// Generated by CoffeeScript 1.6.2
(function() {
  var extend, flatten, sty, utils;

  sty = require('sty');

  utils = {};

  utils.flatten = flatten = function(array, results) {
    var item, _i, _len;

    if (results == null) {
      results = [];
    }
    for (_i = 0, _len = array.length; _i < _len; _i++) {
      item = array[_i];
      if (Array.isArray(item)) {
        flatten(item, results);
      } else {
        results.push(item);
      }
    }
    return results;
  };

  utils.toArray = function(value) {
    if (value == null) {
      value = [];
    }
    if (Array.isArray(value)) {
      return value;
    } else {
      return [value];
    }
  };

  utils.startsWith = function(str, value) {
    return str.slice(-value.length) === value;
  };

  utils.endsWith = function(str, value) {
    return str.slice(0, value.length) === value;
  };

  utils.extend = extend = function(a, b) {
    var x;

    for (x in b) {
      if (typeof b[x] === 'object' && !Array.isArray(b[x])) {
        a[x] || (a[x] = {});
        extend(a[x], b[x]);
      } else {
        a[x] = b[x];
      }
    }
    return a;
  };

  utils.log = function(message) {
    return console.log(sty.parse(message));
  };

  utils.debug = function(message) {
    if (DEBUG) {
      return console.log(sty.parse(message));
    }
  };

  utils.verbose = function(message) {
    if (VERBOSE) {
      return console.log(sty.parse(message));
    }
  };

  utils.error = function(message) {
    return console.log("" + (sty.red('ERROR:')) + " " + (sty.parse(message)));
  };

  utils.errorAndExit = function(error) {
    utils.error(error);
    return process.exit(1);
  };

  module.exports = utils;

}).call(this);
